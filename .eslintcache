[{"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/index.js":"1","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/App.js":"2","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/reportWebVitals.js":"3","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantslist.js":"4","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantDisplay.js":"5","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantdisplay.js":"6","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/nav.js":"7","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/main.js":"8","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/about.js":"9","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/mychart.js":"10","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/Iconimages.js":"11"},{"size":587,"mtime":1610847598574,"results":"12","hashOfConfig":"13"},{"size":1171,"mtime":1611268570382,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610582878425,"results":"15","hashOfConfig":"13"},{"size":2634,"mtime":1611261087658,"results":"16","hashOfConfig":"13"},{"size":1308,"mtime":1610850134245,"results":"17","hashOfConfig":"13"},{"size":9080,"mtime":1611278176849,"results":"18","hashOfConfig":"13"},{"size":1134,"mtime":1611273806677,"results":"19","hashOfConfig":"13"},{"size":1786,"mtime":1611276665171,"results":"20","hashOfConfig":"13"},{"size":191,"mtime":1610855779275,"results":"21","hashOfConfig":"13"},{"size":3015,"mtime":1611278924788,"results":"22","hashOfConfig":"13"},{"size":2878,"mtime":1611103126667,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ptqrij",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/index.js",[],["50","51"],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/App.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/reportWebVitals.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantslist.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantDisplay.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantdisplay.js",["52","53"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Mychart from \"../components/mychart\";\nimport \"../App.scss\";\n\nconst ServantDisplay = (props) => {\n  console.log(\"You summoned: \", props.match.params.symbol);\n\n  //Define a variable to catch the servant ID when clicked on link on Listing page\n  const symbol = props.match.params.symbol;\n\n  //Define a state to see if Servant is summoned.\n  const [current, setCurrent] = React.useState(null);\n\n  //URL to grab the individual servant data. Use ID as the symbol\n  //https://api.atlasacademy.io/nice/NA/servant/${symbol}\n\n  const url = `https://api.atlasacademy.io/nice/NA/svt/${symbol}?lore=true&lang=en`;\n\n  const getServant = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setCurrent(data);\n    console.log(\"Data grabbed: \", data);\n  };\n\n  React.useEffect(() => {\n    getServant();\n  }, []);\n\n  const loaded = () => {\n    //Grab the first ascension image to display.\n    //Store this really long object into a variable.\n    const imageObj = current.extraAssets.charaGraph.ascension;\n    //Get the value from the 1st key of the object -\n    //1st key has the 1st image but sometimes naem of key is different. So just get 1st key\n    const image1 = imageObj[Object.keys(imageObj)[0]];\n\n    //What is the rarity? use the number to decide how many times to display star icon\n    //Rarity 4 -> show 4 stars.\n    const stararray = [];\n    for (let i = 0; i < current.rarity; i++) {\n      stararray.push(\n        <li>\n          <i className=\"las la-star\"></i>\n        </li>\n      );\n    }\n    console.log(\"star array:\", stararray);\n    console.log(\"command cards: \", current.cards);\n\n    //What is the card deck? if Arts, put the arts picture.\n    const comdCard = [];\n    for (let i = 0; i < current.cards.length; i++) {\n      if (current.cards[i] === \"arts\") {\n        comdCard.push(\n          <li>\n            <img\n              src=\"https://static.wikia.nocookie.net/fategrandorder/images/9/95/Arts.png\"\n              alt=\"Arts card\"\n            />\n          </li>\n        );\n      }\n      if (current.cards[i] === \"quick\") {\n        comdCard.push(\n          <li>\n            <img\n              src=\"https://static.wikia.nocookie.net/fategrandorder/images/8/84/Quick.png\"\n              alt=\"Quick card\"\n            />\n          </li>\n        );\n      }\n      if (current.cards[i] === \"buster\") {\n        comdCard.push(\n          <li>\n            <img\n              src=\"https://static.wikia.nocookie.net/fategrandorder/images/6/6e/Buster.png\"\n              alt=\"Buster card\"\n            />\n          </li>\n        );\n      }\n    }\n    console.log(\"command cards array:\", comdCard);\n    //Calculate the letter grade for the stats.\n    let grade = 0;\n    const calcStat = (stat) => {\n      switch (stat) {\n        case \"EX\":\n          grade = 100;\n          break;\n        case \"A++\":\n          grade = 95;\n          break;\n        case \"A+\":\n          grade = 90;\n          break;\n        case \"A\":\n          grade = 85;\n          break;\n        case \"B++\":\n          grade = 79;\n          break;\n        case \"B+\":\n          grade = 74;\n          break;\n        case \"B\":\n          grade = 68;\n          break;\n        case \"C++\":\n          grade = 64;\n          break;\n        case \"C+\":\n          grade = 58;\n          break;\n        case \"C\":\n          grade = 52;\n          break;\n        case \"D++\":\n          grade = 46;\n          break;\n        case \"D+\":\n          grade = 40;\n          break;\n        case \"D\":\n          grade = 35;\n          break;\n        case \"E++\":\n          grade = 30;\n          break;\n        case \"E+\":\n          grade = 25;\n          break;\n        case \"E\":\n          grade = 20;\n          break;\n        default:\n          grade = 0;\n      }\n      return grade;\n    };\n\n    const strength = calcStat(current.profile.stats.strength);\n    const magic = calcStat(current.profile.stats.magic);\n    const agility = calcStat(current.profile.stats.agility);\n    const noble = calcStat(current.profile.stats.np);\n    const endurance = calcStat(current.profile.stats.endurance);\n    const luck = calcStat(current.profile.stats.luck);\n\n    return (\n      <>\n        <section className=\"profile\">\n          <img src={image1} alt={current.name} />\n          <div className=\"svt-general\">\n            <h2>{current.name}</h2>\n            <ul>{stararray}</ul>\n            <div>\n              <img src=\"https://assets.atlasacademy.io/GameData/JP/ClassIcons/class3_1.png\" />\n              <h3>\n                ID: {current.id} | Cost: {current.cost} | Attribute:{\" \"}\n                {current.attribute}\n              </h3>\n            </div>\n          </div>\n\n          <section className=\"description\">\n            <p>{current.profile.comments[0].comment}</p>\n            <div className=\"stat-bar\">\n              <p>Strength: {current.profile.stats.strength}</p>\n              <ProgressBar variant=\"danger\" now={strength} />\n              <p>Magic: {current.profile.stats.magic}</p>\n              <ProgressBar variant=\"danger\" now={magic} />\n              <p>Agility: {current.profile.stats.agility}</p>\n              <ProgressBar variant=\"danger\" now={agility} />\n            </div>\n            <div className=\"stat-bar\">\n              <p>NP: {current.profile.stats.np}</p>\n              <ProgressBar variant=\"danger\" now={noble} />\n              <p>Endurance: {current.profile.stats.endurance}</p>\n              <ProgressBar variant=\"danger\" now={endurance} />\n              <p>Luck: {current.profile.stats.luck}</p>\n              <ProgressBar variant=\"danger\" now={luck} />\n            </div>\n          </section>\n        </section>\n\n        <section className=\"stats\">\n          <Table className=\"flat-table\" responsive bordered hover>\n            <thead>\n              <tr className=\"strong\">\n                <th></th>\n                <th>Level 1</th>\n                <th>Level {current.lvMax}</th>\n                <th>Level 90 [A]</th>\n                <th>Level 100 [A]</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td className=\"strong\">Attack</td>\n                <td>{current.atkBase}</td>\n                <td>{current.atkMax}</td>\n                <td>{current.atkGrowth[89]}</td>\n                <td>{current.atkGrowth[99]}</td>\n              </tr>\n              <tr>\n                <td className=\"strong\">Health</td>\n                <td>{current.hpBase}</td>\n                <td>{current.hpMax}</td>\n                <td>{current.hpGrowth[89]}</td>\n                <td>{current.hpGrowth[99]}</td>\n              </tr>\n            </tbody>\n          </Table>\n\n          <Table className=\"tall-table\" responsive bordered hover>\n            <thead>\n              <tr>\n                <th>Attack</th>\n                <th>Health</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  Lv 1 <br /> <span className=\"strong\">{current.atkBase}</span>\n                </td>\n                <td>\n                  Lv 1 <br /> <span className=\"strong\">{current.hpBase}</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Lv {current.lvMax} <br />\n                  <span className=\"strong\">{current.atkMax}</span>\n                </td>\n                <td>\n                  Lv {current.lvMax} <br />\n                  <span className=\"strong\">{current.hpMax}</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Lv 90 <br />\n                  <span className=\"strong\">{current.atkGrowth[89]}</span>\n                </td>\n                <td>\n                  Lv 90 <br />\n                  <span className=\"strong\">{current.hpGrowth[89]}</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Lv 100 <br />\n                  <span className=\"strong\">{current.atkGrowth[99]}</span>\n                </td>\n                <td>\n                  Lv 100 <br />\n                  <span className=\"strong\">{current.hpGrowth[99]}</span>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n\n          <div className=\"star-desc\">\n            <p>\n              <span className=\"strong\">Star Weight: </span> {current.starAbsorb}\n            </p>\n            <p>\n              <span className=\"strong\">Star Generate: </span>\n              {(current.starGen * 0.1).toFixed(2)} %\n            </p>\n          </div>\n          <div className=\"commands\">\n            <h3>Command Cards</h3>\n            <ul>{comdCard}</ul>\n          </div>\n        </section>\n        <Mychart />\n      </>\n    );\n  };\n  // ---------End of loaded function-----------\n  const loading = () => {\n    return <h3>Select One</h3>;\n  };\n\n  return (\n    <div className=\"servant-display\">{current ? loaded() : loading()}</div>\n  );\n};\n\nexport default ServantDisplay;\n","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/nav.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/main.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/about.js",[],["54","55"],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/mychart.js",["56"],"import { HorizontalBar, Line } from \"react-chartjs-2\";\nimport React from \"react\";\nimport \"../App.scss\";\n\nconst Mychart = () => {\n  const [chartData, setChartData] = React.useState({});\n\n  React.useEffect(() => {\n    setChartData({\n      labels: [\"Lv1\", \"Lv Max\", \"Grail 90\", \"Grail 100\"],\n      datasets: [\n        {\n          label: \"Attack\",\n          data: [1666, 9999, 11048, 12107],\n          backgroundColor: [\"rgba(255, 99, 132, 0.0)\"],\n          borderWidth: 1,\n          borderColor: \"#e22f2f\",\n          hoverBorderWidth: 3,\n          hoverBorderColor: \"#000\",\n        },\n        {\n          label: \"Health\",\n          data: [1781, 11135, 12313, 13501],\n          backgroundColor: [\"rgba(65, 219, 129, 0.0)\"],\n          borderWidth: 1,\n          borderColor: \"#15af27\",\n          hoverBorderWidth: 3,\n          hoverBorderColor: \"#000\",\n        },\n      ],\n    });\n  }, []);\n\n  /* --------------------------------------------\n  React.useEffect(() => {\n    setChartData({\n      labels: [\"Min Level\", \"Max Level\"],\n      datasets: [\n        {\n          label: \"Attack Level: (1 - 80)\",\n          data: [1455, 8730],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.6)\",\n            \"rgba(255, 99, 132, 0.8)\",\n          ],\n        },\n        {\n          label: \"Attack: (90 - 100)\",\n          data: [9653, 10575],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.6)\",\n            \"rgba(255, 99, 132, 0.8)\",\n          ],\n        },\n        {\n          label: \"Health Level: (1 - 80)\",\n          data: [2060, 12877],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(75, 192, 192, 0.6)\",\n            \"rgba(75, 192, 192, 0.8)\",\n          ],\n        },\n        {\n          label: \"Health: (90 - 100)\",\n          data: [14248, 15619],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(75, 192, 192, 0.6)\",\n            \"rgba(75, 192, 192, 0.8)\",\n          ],\n        },\n      ],\n    });\n  }, []);\n\n--------------------------- */\n\n  return (\n    <div className=\"chart\">\n      <Line\n        data={chartData}\n        options={{\n          responsive: true,\n          maintainAspectRatio: true,\n          title: {\n            display: true,\n            text: \"Growth Curve\",\n            fontSize: 25,\n          },\n          legend: {\n            display: true,\n            //position: \"right\",\n          },\n          scales: {\n            xAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  //max: 100,\n                  //display:false\n                },\n                gridLines: {\n                  display: true,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                gridLines: {\n                  display: true,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Mychart;\n","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/Iconimages.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":31,"column":6,"nodeType":"63","endLine":31,"endColumn":8,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":162,"column":15,"nodeType":"67","endLine":162,"endColumn":95},{"ruleId":"57","replacedBy":"68"},{"ruleId":"59","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":23},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getServant'. Either include it or remove the dependency array.","ArrayExpression",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["74"],["75"],"no-unused-vars","'HorizontalBar' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [getServant]",{"range":"79","text":"80"},[1013,1015],"[getServant]"]