[{"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/index.js":"1","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/App.js":"2","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/reportWebVitals.js":"3","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantslist.js":"4","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantDisplay.js":"5","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantdisplay.js":"6","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/nav.js":"7","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/main.js":"8","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/about.js":"9","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/mychart.js":"10"},{"size":587,"mtime":1610847598574,"results":"11","hashOfConfig":"12"},{"size":1730,"mtime":1610929197029,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610582878425,"results":"14","hashOfConfig":"12"},{"size":1643,"mtime":1610925758913,"results":"15","hashOfConfig":"12"},{"size":1308,"mtime":1610850134245,"results":"16","hashOfConfig":"12"},{"size":1378,"mtime":1610929186624,"results":"17","hashOfConfig":"12"},{"size":843,"mtime":1610923924795,"results":"18","hashOfConfig":"12"},{"size":350,"mtime":1610940436939,"results":"19","hashOfConfig":"12"},{"size":191,"mtime":1610855779275,"results":"20","hashOfConfig":"12"},{"size":2641,"mtime":1610942168247,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ptqrij",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/index.js",[],["47","48"],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/App.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/reportWebVitals.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantslist.js",["49"],"import React from \"react\";\nimport ServantDisplay from \"./servantdisplay\";\nimport \"../App.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst ServantList = () => {\n  // Use this URL to get the list of Servants to Display\n  const urGrab = \"https://api.atlasacademy.io/export/NA/basic_servant.json\";\n\n  const [servantIndex, setServantIndex] = React.useState(null);\n\n  const getData = async () => {\n    const response = await fetch(urGrab);\n    const data = await response.json();\n    //console.log(\"The parsed data is: \", data);\n    setServantIndex(data);\n  };\n\n  React.useEffect(() => {\n    getData();\n  }, []);\n\n  //Check if the data has been loaded by seeing if servantIndex state is null. If  not null,\n  // use the loaded() to display stuff. First map out servantIndex so it looks cleaner.\n  // The new servantArr array only has NAME and ID grabed from the API\n  const loaded = () => {\n    const servantArr = servantIndex.map((item, index) => {\n      return (\n        <Link to={`/servantdisplay/${item.id}`} key={index}>\n          <div className=\"cards\">\n            <img src={item.face} alt={item.name} />\n            <p>{item.name}</p>\n            <p>\n              {item.id}\n              <span class=\"right\">{item.rarity}</span>\n            </p>\n          </div>\n        </Link>\n      );\n    });\n    return (\n      <div className=\"servant-list\">\n        <h1>Servants List</h1>\n        {servantArr}\n      </div>\n    );\n  };\n\n  // If the data is null, it will just display Page Loading...\n  const loading = () => {\n    return <h1>Page Loading...</h1>;\n  };\n\n  return servantIndex ? loaded() : loading();\n};\n\nexport default ServantList;\n","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantDisplay.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantdisplay.js",["50"],"import React from \"react\";\nimport \"../App.scss\";\n\n\nconst ServantDisplay = (props) => {\n  console.log(\"You summoned: \", props.match.params.symbol);\n\n  //Define a variable to catch the servant ID when clicked on link on Listing page\n  const symbol = props.match.params.symbol;\n\n  //Define a state to see if Servant is summoned.\n  const [current, setCurrent] = React.useState(null);\n\n  //URL to grab the individual servant data. Use ID as the symbol\n  const url = `https://api.atlasacademy.io/nice/NA/servant/${symbol}`;\n\n  const getServant = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setCurrent(data);\n    console.log(\"Data grabbed: \", data);\n  };\n\n  React.useEffect(() => {\n    getServant();\n  }, []);\n\n  const loaded = () => {\n    console.log(\n      \"Ascension Image: \",\n      current.extraAssets.charaGraph.ascension[\"1\"]\n    );\n    const image1 = current.extraAssets.charaGraph.ascension[\"1\"];\n\n    return (\n      <div>\n        <img src={image1} alt={current.name} />\n        <p>Servant: ID: {current.id}</p>\n        <p>Servant: Name: {current.name}</p>\n      </div>\n    );\n  };\n\n  const loading = () => {\n    return <h3>Select One</h3>;\n  };\n\n  return (\n    <div className=\"servant-display\">\n      <h2>Servant You Summoned: </h2>\n      {current ? loaded() : loading()}\n    </div>\n  );\n};\n\nexport default ServantDisplay;\n","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/nav.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/main.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/about.js",[],["51","52"],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/mychart.js",["53"],"import { HorizontalBar } from \"react-chartjs-2\";\nimport React from \"react\";\n\nconst Mychart = () => {\n  const [chartData, setChartData] = React.useState({\n    labels: [\"Min Level\", \"Max Level\"],\n    datasets: [\n      {\n        label: \"Attack Level: (1 - 80)\",\n        data: [1455, 8730],\n        //backgroundColor:'green',\n        backgroundColor: [\n            \"rgba(255, 99, 132, 0.6)\", \n            \"rgba(255, 99, 132, 0.8)\"\n        ],\n      },\n      {\n        label: \"Attack: (90 - 100)\",\n        data: [9653, 10575],\n        //backgroundColor:'green',\n        backgroundColor:[\n            \"rgba(255, 99, 132, 0.6)\", \n            \"rgba(255, 99, 132, 0.8)\"\n        ],\n      },\n      {\n        label: \"Health Level: (1 - 80)\",\n        data: [2060, 12877],\n        //backgroundColor:'green',\n        backgroundColor: [\n            \"rgba(75, 192, 192, 0.6)\",\n        \"rgba(75, 192, 192, 0.8)\",\n        ],\n      },\n      {\n        label: \"Health: (90 - 100)\",\n        data: [14248, 15619],\n        //backgroundColor:'green',\n        backgroundColor: [\n         \"rgba(75, 192, 192, 0.6)\",\n          \"rgba(75, 192, 192, 0.8)\",\n        ],\n      },\n    ],\n  });\n\n  // const [chartData, setChartData] = React.useState({\n  //     labels: [\"Strength\"],\n  //     datasets: [\n  //       {\n  //         label: \"Population\",\n  //         data: [40],\n  //         //backgroundColor:'green',\n  //         backgroundColor: [\n  //           \"rgba(255, 99, 132, 0.6)\",\n  //         ],\n  //         border: \"solid\"\n  //       },\n  //     ],\n  //   });\n\n  //   backgroundColor: [\n  //     \"rgba(255, 99, 132, 0.6)\",\n  //     \"rgba(54, 162, 235, 0.6)\",\n  //     \"rgba(255, 206, 86, 0.6)\",\n  //     \"rgba(75, 192, 192, 0.6)\",\n  //     \"rgba(153, 102, 255, 0.6)\",\n  //   ],\n\n  return (\n    <div>\n      <h3>Mashu's Attack and Health</h3>\n      <HorizontalBar\n        data={chartData}\n        options={{\n          title: {\n            display: false,\n            text: \"Attack and Health\",\n            fontSize: 25,\n          },\n          legend: {\n            display: true,\n            //position: \"right\",\n          },\n          scales: {\n            xAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  //max: 100,\n                  //display:false\n                },\n                gridLines: {\n                  display: true,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                gridLines: {\n                  display: false,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Mychart;\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":26,"column":6,"nodeType":"64","endLine":26,"endColumn":8,"suggestions":"65"},{"ruleId":"54","replacedBy":"66"},{"ruleId":"56","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"68","line":5,"column":21,"nodeType":"60","messageId":"61","endLine":5,"endColumn":33},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'ServantDisplay' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getServant'. Either include it or remove the dependency array.","ArrayExpression",["71"],["69"],["70"],"'setChartData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [getServant]",{"range":"74","text":"75"},[751,753],"[getServant]"]