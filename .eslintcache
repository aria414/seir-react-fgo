[{"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/index.js":"1","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/App.js":"2","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/reportWebVitals.js":"3","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantslist.js":"4","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantDisplay.js":"5","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantdisplay.js":"6","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/nav.js":"7","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/main.js":"8","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/about.js":"9","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/mychart.js":"10","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/Iconimages.js":"11"},{"size":567,"mtime":1616796169274,"results":"12","hashOfConfig":"13"},{"size":1267,"mtime":1616288777912,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610582878425,"results":"15","hashOfConfig":"13"},{"size":2560,"mtime":1616797036804,"results":"16","hashOfConfig":"13"},{"size":1308,"mtime":1610850134245,"results":"17","hashOfConfig":"18"},{"size":9774,"mtime":1616800182684,"results":"19","hashOfConfig":"13"},{"size":776,"mtime":1616288796180,"results":"20","hashOfConfig":"13"},{"size":1654,"mtime":1616288786880,"results":"21","hashOfConfig":"13"},{"size":1755,"mtime":1616287469423,"results":"22","hashOfConfig":"13"},{"size":3841,"mtime":1615681597180,"results":"23","hashOfConfig":"13"},{"size":4581,"mtime":1616800127022,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cc51x9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ptqrij",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/index.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/App.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/reportWebVitals.js",[],["49","50"],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantslist.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantDisplay.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/servantdisplay.js",["51","52"],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/nav.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/main.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/pages/about.js",[],"/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/components/mychart.js",["53"],"import { Line } from \"react-chartjs-2\";\nimport React from \"react\";\nimport \"../App.scss\";\n\nconst Mychart = (props) => {\n  const [chartData, setChartData] = React.useState({});\n  console.log(\"data passed in chart:\", props);\n\n  let count = 0;\n  const levels = [];\n  //Count how many levels the character has. It is in the attackData props. attackData is an array with\n  // The attack points of every level so its length is the number of levels.\n  // Push those attack points into the levels [] array.\n  props.attackData.forEach((item) => {\n    levels.push(++count);\n  });\n\n  React.useEffect(() => {\n    setChartData({\n      labels: levels,\n      datasets: [\n        {\n          label: \"Attack\",\n          data: props.attackData,\n          backgroundColor: [\"rgba(255, 99, 132, 0.0)\"],\n          borderWidth: 2,\n          borderColor: \"#e22f2f\",\n          hoverBorderWidth: 3,\n          hoverBorderColor: \"#000\",\n          pointBackgroundColor: \"rgba(0, 0, 0, 0.1)\",\n          pointBorderColor: \"rgba(0, 0, 0, 0.0)\", //This will make the dots invisible since no opacity.\n          pointStyle: \"line\",\n        },\n        {\n          label: \"Health\",\n          data: props.healthData,\n          backgroundColor: [\"rgba(65, 219, 129, 0.0)\"],\n          borderWidth: 2,\n          borderColor: \"#15af27\",\n          hoverBorderWidth: 3,\n          hoverBorderColor: \"#000\",\n          pointBorderColor: \"rgba(0, 0, 0, 0.0)\", //This will make the dots invisible since no opacity.\n          pointStyle: \"line\",\n        },\n      ],\n    });\n  }, []);\n\n  /* --------------------------------------------\n  React.useEffect(() => {\n    setChartData({\n      labels: [\"Min Level\", \"Max Level\"],\n      datasets: [\n        {\n          label: \"Attack Level: (1 - 80)\",\n          data: [1455, 8730],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.6)\",\n            \"rgba(255, 99, 132, 0.8)\",\n          ],\n        },\n        {\n          label: \"Attack: (90 - 100)\",\n          data: [9653, 10575],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.6)\",\n            \"rgba(255, 99, 132, 0.8)\",\n          ],\n        },\n        {\n          label: \"Health Level: (1 - 80)\",\n          data: [2060, 12877],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(75, 192, 192, 0.6)\",\n            \"rgba(75, 192, 192, 0.8)\",\n          ],\n        },\n        {\n          label: \"Health: (90 - 100)\",\n          data: [14248, 15619],\n          //backgroundColor:'green',\n          backgroundColor: [\n            \"rgba(75, 192, 192, 0.6)\",\n            \"rgba(75, 192, 192, 0.8)\",\n          ],\n        },\n      ],\n    });\n  }, []);\n\n--------------------------- */\n\n  return (\n    <div className=\"chart\">\n      <Line\n        data={chartData}\n        options={{\n          responsive: true,\n          maintainAspectRatio: true,\n          title: {\n            display: true,\n            text: \"Growth Curve\",\n            fontSize: 25,\n          },\n          legend: {\n            display: true,\n            //position: \"right\",\n          },\n          scales: {\n            xAxes: [\n              {\n                ticks: {\n                  // beginAtZero: true,\n                  min: 10,\n                  //max: 100,\n                  //display:false\n                  maxTicksLimit: 5,\n                },\n                gridLines: {\n                  display: true,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  display: true,\n                  stepSize: 4500,\n                },\n                gridLines: {\n                  display: true,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Mychart;\n","/Users/anny/Desktop/seir-1207/REACT/seir-react-project/src/Iconimages.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":32,"column":6,"nodeType":"60","endLine":32,"endColumn":8,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":183,"column":15,"nodeType":"64","endLine":183,"endColumn":53},{"ruleId":"58","severity":1,"message":"65","line":47,"column":6,"nodeType":"60","endLine":47,"endColumn":8,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getServant'. Either include it or remove the dependency array.","ArrayExpression",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook React.useEffect has missing dependencies: 'levels', 'props.attackData', and 'props.healthData'. Either include them or remove the dependency array. If 'setChartData' needs the current value of 'props.attackData', you can also switch to useReducer instead of useState and read 'props.attackData' in the reducer.",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [getServant]",{"range":"75","text":"76"},"Update the dependencies array to be: [levels, props.attackData, props.healthData]",{"range":"77","text":"78"},[1055,1057],"[getServant]",[1529,1531],"[levels, props.attackData, props.healthData]"]